{"version":3,"file":"index.umd.js","sources":["../src/hooks/useClickOutside.js","../src/hooks/useComponentSize.js","../src/hooks/useWindowSize.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst useClickOutside = (ref = useRef, state = false, action = () => {}) => {\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (state) {\n        if (ref.current && !ref.current.contains(event.target)) action();\n      }\n    };\n\n    // Bind the event listener\n    window.addEventListener(\"mousedown\", handleClickOutside);\n\n    //CleanUp\n    return () => window.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [ref, state, action]);\n};\n\nexport default useClickOutside;\n","/*\n * Returns the current height and width of a component\n */\n\nimport { useEffect, useRef } from \"react\";\n\nconst useComponentSize = (ref = useRef) => {\n  const dimensions = useRef({ width: 0, height: 0 });\n\n  useEffect(() => {\n    dimensions.current.width = ref.current.offsetWidth;\n    dimensions.current.height = ref.current.offsetHeight;\n  }, [ref]);\n\n  return dimensions.current;\n};\n\nexport default useComponentSize;\n","/*\n * Returns window dimensions - width & height.\n * Responsive with event listeners.\n */\n\nimport { useState, useLayoutEffect, useCallback } from \"react\";\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  const handleResize = useCallback(() => {\n    // Only runs on client side\n    if (typeof window !== \"undefined\")\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n  }, []);\n\n  useLayoutEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [handleResize]);\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n"],"names":["useClickOutside","ref","useRef","state","action","useEffect","handleClickOutside","event","current","contains","target","window","addEventListener","removeEventListener","useComponentSize","dimensions","width","height","offsetWidth","offsetHeight","useWindowSize","useState","undefined","windowSize","setWindowSize","handleResize","useCallback","innerWidth","innerHeight","useLayoutEffect"],"mappings":";;;;;;;;;MAEMA,eAAe,GAAG,SAAlBA,eAAkB,GAAoD;EAAA,MAAnDC,GAAmD,uEAA7CC,YAA6C;EAAA,MAArCC,KAAqC,uEAA7B,KAA6B;EAAA,MAAtBC,MAAsB,uEAAb,YAAM,EAAO;EAC1EC,EAAAA,eAAS,CAAC,YAAM;EACd,QAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;EACpC,UAAIJ,KAAJ,EAAW;EACT,YAAIF,GAAG,CAACO,OAAJ,IAAe,CAACP,GAAG,CAACO,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwDN,MAAM;EAC/D;EACF,KAJD,CADc;;;EAQdO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCN,kBAArC,EARc;;EAWd,WAAO;EAAA,aAAMK,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCP,kBAAxC,CAAN;EAAA,KAAP;EACD,GAZQ,EAYN,CAACL,GAAD,EAAME,KAAN,EAAaC,MAAb,CAZM,CAAT;EAaD;;EChBD;EACA;EACA;;MAIMU,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAkB;EAAA,MAAjBb,GAAiB,uEAAXC,YAAW;EACzC,MAAMa,UAAU,GAAGb,YAAM,CAAC;EAAEc,IAAAA,KAAK,EAAE,CAAT;EAAYC,IAAAA,MAAM,EAAE;EAApB,GAAD,CAAzB;EAEAZ,EAAAA,eAAS,CAAC,YAAM;EACdU,IAAAA,UAAU,CAACP,OAAX,CAAmBQ,KAAnB,GAA2Bf,GAAG,CAACO,OAAJ,CAAYU,WAAvC;EACAH,IAAAA,UAAU,CAACP,OAAX,CAAmBS,MAAnB,GAA4BhB,GAAG,CAACO,OAAJ,CAAYW,YAAxC;EACD,GAHQ,EAGN,CAAClB,GAAD,CAHM,CAAT;EAKA,SAAOc,UAAU,CAACP,OAAlB;EACD;;MCRKY,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,kBAAoCC,cAAQ,CAAC;EAC3CL,IAAAA,KAAK,EAAEM,SADoC;EAE3CL,IAAAA,MAAM,EAAEK;EAFmC,GAAD,CAA5C;EAAA;EAAA,MAAOC,UAAP;EAAA,MAAmBC,aAAnB;;EAKA,MAAMC,YAAY,GAAGC,iBAAW,CAAC,YAAM;EACrC;EACA,QAAI,OAAOf,MAAP,KAAkB,WAAtB,EACEa,aAAa,CAAC;EAAER,MAAAA,KAAK,EAAEL,MAAM,CAACgB,UAAhB;EAA4BV,MAAAA,MAAM,EAAEN,MAAM,CAACiB;EAA3C,KAAD,CAAb;EACH,GAJ+B,EAI7B,EAJ6B,CAAhC;EAMAC,EAAAA,qBAAe,CAAC,YAAM;EACpBJ,IAAAA,YAAY;EACZd,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCa,YAAlC;EAEA,WAAO;EAAA,aAAMd,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCY,YAArC,CAAN;EAAA,KAAP;EACD,GALc,EAKZ,CAACA,YAAD,CALY,CAAf;EAOA,SAAOF,UAAP;EACD;;;;;;;;;;;;"}